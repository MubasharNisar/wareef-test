---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/authors":
    get:
      summary: Retrieves all authors
      tags:
      - Authors
      responses:
        '200':
          description: authors found
    post:
      summary: Creates an author
      tags:
      - Authors
      parameters: []
      responses:
        '201':
          description: author created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
              - name
              - email
  "/authors/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves an author
      tags:
      - Authors
      responses:
        '200':
          description: author found
        '404':
          description: author not found
    put:
      summary: Updates an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: author updated
        '422':
          description: invalid request
        '404':
          description: author not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
              - name
              - email
    delete:
      summary: Deletes an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: author deleted successfully
        '404':
          description: author not found
        '422':
          description: no other author available to transfer courses
  "/courses":
    get:
      summary: Retrieves all courses
      tags:
      - Courses
      responses:
        '200':
          description: courses found
    post:
      summary: Creates a course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: course created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author_id:
                  type: integer
                code:
                  type: string
                credit_hours:
                  type: integer
              required:
              - title
              - author_id
              - code
              - credit_hours
  "/courses/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a course
      tags:
      - Courses
      responses:
        '200':
          description: course found
        '404':
          description: course not found
    put:
      summary: Updates a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: course updated
        '422':
          description: invalid request
        '404':
          description: course not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author_id:
                  type: integer
                code:
                  type: string
                credit_hours:
                  type: integer
              required:
              - title
              - author_id
              - code
              - credit_hours
    delete:
      summary: Deletes a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: course deleted
        '404':
          description: course not found
  "/courses/{id}/enroll":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: talent_id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: Enrolls a talent in a course
      tags:
      - Courses
      responses:
        '201':
          description: enrollment created
        '404':
          description: course or talent not found
  "/courses/{id}/complete_course":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: talent_id
      in: query
      required: true
      schema:
        type: integer
    post:
      summary: Completes a course for a talent
      tags:
      - Courses
      responses:
        '200':
          description: course completed
        '404':
          description: course or talent not found
  "/learning_paths":
    get:
      summary: Retrieves all learning paths
      tags:
      - Learning Paths
      responses:
        '200':
          description: learning paths found
    post:
      summary: Creates a learning path
      tags:
      - Learning Paths
      parameters: []
      responses:
        '201':
          description: learning path created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                sequenced_courses:
                  type: array
                  items:
                    type: integer
                  description: Array of course IDs in sequence
              required:
              - title
              - sequenced_courses
  "/learning_paths/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a learning path
      tags:
      - Learning Paths
      responses:
        '200':
          description: learning path found
        '404':
          description: learning path not found
    put:
      summary: Updates a learning path
      tags:
      - Learning Paths
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: learning path updated
        '422':
          description: invalid request
        '404':
          description: learning path not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
              - title
    delete:
      summary: Deletes a learning path
      tags:
      - Learning Paths
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: learning path deleted
        '404':
          description: learning path not found
  "/learning_paths/{id}/enroll":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: Enroll talent in a learning path
      tags:
      - Learning Paths
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: talent_id
        in: query
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: talent enrolled in learning path
        '422':
          description: invalid request
        '404':
          description: learning path not found
  "/talents":
    get:
      summary: Retrieves all talents
      tags:
      - Talents
      responses:
        '200':
          description: talents found
    post:
      summary: Creates a talent
      tags:
      - Talents
      parameters: []
      responses:
        '201':
          description: talent created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
              - name
              - email
  "/talents/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a talent
      tags:
      - Talents
      responses:
        '200':
          description: talent found
        '404':
          description: talent not found
    put:
      summary: Updates a talent
      tags:
      - Talents
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: talent updated
        '422':
          description: invalid request
        '404':
          description: talent not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
              - name
              - email
    delete:
      summary: Deletes a talent
      tags:
      - Talents
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: talent deleted successfully
        '404':
          description: talent not found
  "/talents/{id}/become_author":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: Become an author
      tags:
      - Talents
      responses:
        '200':
          description: talent became an author
        '404':
          description: talent not found
        '422':
          description: talent is already an author
servers:
- url: "/api/v1"
